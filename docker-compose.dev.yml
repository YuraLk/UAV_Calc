services:
  # Контейнер с Golang - приложением
  app:
    build:
      context: ./app
      target: dev
    container_name: drone_calc_backend_app
    tty: true
    working_dir: /opt/server
    volumes:
      - ./app:/opt/server
      - ./static:/opt/static
    environment:
      PORT: ${PORT}
      SSL_PORT: ${SSL_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      MIN_APP_VER: ${MIN_APP_VER}
    expose:
      - '${PORT}'
    depends_on:
      - db

  # Контейнер с базой данных
  db:
    image: postgres:latest
    container_name: db
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./postgres:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    expose:
      - '${POSTGRES_PORT}'
    restart: always

  # Контейнер с nginx
  nginx:
    container_name: proxy_nginx
    depends_on:
      - app
      - db
      - pgadmin
    image: nginx:latest
    ports:
      - "${HTTP_PORT}:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - ./static:/var/www/static
    restart: always

  # Контейнер с pgadmin
  pgadmin:
    container_name: pgadmin
    depends_on:
      - db
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    expose:
      - '${PGADMIN_PORT}'
    restart: always

  # Контейнер с flyway
  flyway:
    container_name: flyway
    image: flyway/flyway
    depends_on:
      - db
    command: -url=jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB} -schemas=public -user=${POSTGRES_USER} -password=${POSTGRES_PASSWORD} migrate
    volumes:
      - ./app/postgres/migrations:/flyway/sql
volumes:
  postgres:
